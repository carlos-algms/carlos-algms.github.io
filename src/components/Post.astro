---
import type { CollectionEntry } from 'astro:content';
import { getRelativeLocaleUrl } from 'astro:i18n';
import { render } from 'astro:content';
import CalendarIcon from '../assets/icons/calendar.svg';
import { t } from '../lang/translations';

type Props = {
  limitToExcerpt?: boolean;
  post: CollectionEntry<'blog'>;
};

// FIXIT: Add zoom on image click
// FIXIT: Add translations to time's tags titles
const { limitToExcerpt, post } = Astro.props;
const {
  data: { title, slug, date: createdAt, updated: updatedAt, lang },
} = post;
const body = post.rendered?.html || '';

const { Content } = await render({
  ...post,
  rendered: {
    ...post.rendered,
    html: !limitToExcerpt ? body : body.split('<!-- more -->')[0],
  },
});

// FIXIT: Add meta tags, canonical and hreflang for multi-language and SEO
---

<article
  class="article-entry"
  itemscope
  itemtype="https://schema.org/BlogPosting"
>
  <header>
    <h2 class="text-clamp-l mb-1" itemprop="name">
      {
        !limitToExcerpt ? (
          title
        ) : (
          <a href={getRelativeLocaleUrl(lang, `/blog/${slug}/`)} itemprop="url">
            {title}
          </a>
        )
      }
    </h2>

    <div
      class="border-y-1 border-neutral-200 dark:border-gray-600 mt-4 py-2 flex gap-1"
    >
      <CalendarIcon width={20} height={20} />

      {
        updatedAt.getTime() !== createdAt.getTime() && (
          <>
            {t('updated', lang)}
            <time
              datetime={updatedAt.toISOString()}
              itemprop="dateModified"
              title={t('updated', lang)}
            />
            -
          </>
        )
      }

      {t('published', lang)}
      <time
        datetime={createdAt.toISOString()}
        itemprop="datePublished"
        title={t('published', lang)}></time>
    </div>
  </header>

  <div itemprop="articleBody">
    <Content />
  </div>

  {
    limitToExcerpt && (
      <a
        class="focus:outline-none text-white bg-purple-700 hover:bg-purple-800 focus:ring-4 focus:ring-purple-300 rounded-lg px-5 py-2.5 my-2 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900 inline-flex items-center"
        href={getRelativeLocaleUrl(lang, `/blog/${slug}/`)}
      >
        {t('read_more', lang)}
        <span
          class="rounded-full bg-white size-5 inline-block text-purple-700 text-center ml-1 text-3xl font-bold leading-5"
          aria-hidden="true"
        >
          +
        </span>
      </a>
    )
  }
</article>

<script>
  // run on client to format on user's locale
  const timeTags = document.querySelectorAll('time');

  timeTags.forEach((timeTag) => {
    const date = new Date(timeTag.getAttribute('datetime') || '');
    timeTag.textContent = date.toLocaleDateString(navigator.language, {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    });

    timeTag.setAttribute(
      'title',
      timeTag.getAttribute('title') + `: ${date.toLocaleString()}`,
    );
  });
</script>
