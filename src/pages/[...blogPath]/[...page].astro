---
import type { GetStaticPathsOptions } from 'astro';
import type { CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { getBlogPostsSorted } from '../../content.config';
import Post from '../../components/Post.astro';
import type { TranslationsLang } from '../../lang/translations';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const allPosts = await getBlogPostsSorted();
  const groupedByLang = allPosts.reduce(
    (acc, post) => {
      const lang = post.data.lang as TranslationsLang;
      acc[lang] ??= [];
      acc[lang].push(post);
      return acc;
    },
    {} as Record<TranslationsLang, CollectionEntry<'blog'>[]>,
  );

  const paths = Object.entries(groupedByLang).flatMap(([lang, posts]) => {
    return paginate<
      CollectionEntry<'blog'>,
      { lang: TranslationsLang },
      { blogPath: string }
    >(posts, {
      pageSize: 5,
      params: {
        blogPath: lang === 'pt-br' ? 'blog' : `${lang}/blog`,
      },
      props: {
        lang: lang as TranslationsLang,
      },
    });
  });

  return paths;
}

const { page, lang } = Astro.props;
---

<Layout
  title={`Blog${page.currentPage > 1 ? ` - Page ${page.currentPage}` : ''}`}
  lang={lang}
>
  <ol class="container mx-auto">
    {
      page.data.map((post) => (
        <li class="mb-9">
          <Post limitToExcerpt={true} post={post} />
        </li>
      ))
    }
  </ol>
</Layout>
